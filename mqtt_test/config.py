import os.path

from dotenv import load_dotenv

load_dotenv('.env')

AWS_IOT_HOST = os.environ.get('AWS_IOT_HOST')
AWS_IOT_PORT = os.environ.get('AWS_IOT_PORT')
AWS_IOT_ROOTCA = os.environ.get('AWS_IOT_ROOTCA')
AWS_IOT_CERTIFICATE = os.environ.get('AWS_IOT_CERTIFICATE')
AWS_IOT_PRICATE_KEY = os.environ.get('AWS_IOT_PRICATE_KEY')
AWS_IOT_BASE_RECONNECT_QUIET_TIME = int(os.environ.get('AWS_IOT_BASE_RECONNECT_QUIET_TIME', '5'))  # sec
AWS_IOT_MAX_RECONNECT_QUIET_TIME = int(os.environ.get('AWS_IOT_MAX_RECONNECT_QUIET_TIME', '32'))  # sec
AWS_IOT_STABLE_CONNECTION_TIME = int(os.environ.get('AWS_IOT_STABLE_CONNECTION_TIME', '20'))  # sec
AWS_IOT_CONNECT_DISCONNECT_TIMEOUT = int(os.environ.get('AWS_IOT_CONNECT_DISCONNECT_TIMEOUT', '10'))  # sec
AWS_IOT_MQTT_OPERATION_TIMEOUT = int(os.environ.get('AWS_IOT_MQTT_OPERATION_TIMEOUT', '5'))  # sec

MQTT_TOPIC = os.environ.get('MQTT_TOPIC', 'test')
MQTT_QOS = int(os.environ.get('MQTT_QOS', '0'))
MQTT_PUBLISH_INTERVAL = int(os.environ.get('MQTT_PUBLISH_INTERVAL', '1000'))  # ms

print('=== Configuration ===')
print(f'AWS_IOT_HOST={AWS_IOT_HOST}')
print(f'AWS_IOT_PORT={AWS_IOT_PORT}')
print(f'AWS_IOT_ROOTCA={AWS_IOT_ROOTCA}')
print(f'AWS_IOT_CERTIFICATE={AWS_IOT_CERTIFICATE}')
print(f'AWS_IOT_PRICATE_KEY={AWS_IOT_PRICATE_KEY}')
print(f'AWS_IOT_BASE_RECONNECT_QUIET_TIME={AWS_IOT_BASE_RECONNECT_QUIET_TIME}')
print(f'AWS_IOT_MAX_RECONNECT_QUIET_TIME={AWS_IOT_MAX_RECONNECT_QUIET_TIME}')
print(f'AWS_IOT_STABLE_CONNECTION_TIME={AWS_IOT_STABLE_CONNECTION_TIME}')
print(f'AWS_IOT_CONNECT_DISCONNECT_TIMEOUT={AWS_IOT_CONNECT_DISCONNECT_TIMEOUT}')
print(f'AWS_IOT_MQTT_OPERATION_TIMEOUT={AWS_IOT_MQTT_OPERATION_TIMEOUT}')
print(f'MQTT_TOPIC={MQTT_TOPIC}')
print(f'MQTT_QOS={MQTT_QOS}')
print(f'MQTT_PUBLISH_INTERVAL={MQTT_PUBLISH_INTERVAL}')
print('=====================')
